#!/bin/sh
# -------
# File:        aurex-vb-tool
# Description: Manage VirtualBox extension packs
# Author:      Luis Antonio Garcia Gisbert <luisgg@gmail.com> 
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along 
# with this program; if not, write to the Free Software Foundation, Inc., 
# 51 Franklin St, Fifth Floor, Boston MA 02110-1301 USA
# --------

# whoami?
usage(){
	echo "$(basename "$0") {update-extpack|set-default}" >&2
	exit 1
}


BASE_NAME="$(basename "$0" |sed -e "s%^aurex-%%;s%-tool%%")"
case "$BASE_NAME" in
	vb4.3|vb-4.3)
		VBOXPACKAGE="virtualbox-4.3"
		;;
	vb4.2|vb-4.2)
		VBOXPACKAGE="virtualbox-4.2"
		;;
	vb4.1|vb-4.1)
		VBOXPACKAGE="virtualbox-4.1"
		;;
	*)
		VBOXPACKAGE="virtualbox-4.0"
		;;
esac

if [ "$1" = "set-default" ] ; then
	BEGIN_AUREX="#### ============= BEGIN AUREX AUTOMAGIC SETTINGS ============= ####"
	END_AUREX="#### ============= END AUREX AUTOMAGIC SETTINGS ============= ####"
	TMP_FILE="$(tempfile)"
	DEF_FILE="/etc/default/virtualbox"
	if [ -r "$DEF_FILE" ] ; then
		sed -e "/^$BEGIN_AUREX/,/^$END_AUREX/d" "$DEF_FILE" > $TMP_FILE
	fi
	cat <<EOF >>$TMP_FILE
$BEGIN_AUREX
####  DO NOT EDIT THIS SECTION -- YOUR CHANGES WILL BE OVERWRITTEN ####
if [ "\$0" = "/var/lib/dpkg/info/virtualbox-4.3.postinst" ] && [ "\$1" = "configure" ] && [ "\$2" ] && [ -x /usr/sbin/aurex-vb4.3-tool ] ; then
	/usr/sbin/aurex-vb4.3-tool update-extpack "\$2"
fi
$END_AUREX
EOF
	cat "$TMP_FILE" > "$DEF_FILE"
	exit 0
fi

[ "$1" = "update-extpack" ] || usage
CURRENT_VERSION="$2"
[ "$CURRENT_VERSION" ] || CURRENT_VERSION="$(dpkg -s "$VBOXPACKAGE" 2>/dev/null |sed -ne "/^Version:/s%^.*[[:blank:]]%%p")"
# check installation
if [ -z "$CURRENT_VERSION" ] ; then
	echo "VirtualBox not installed. Exiting"
	exit 0
fi

REQ_VER="${CURRENT_VERSION%%-*}"
REQ_VR="${CURRENT_VERSION%%~*}"
REQ_REV="${REQ_VR##*-}"
REQ_NAME="Oracle_VM_VirtualBox_Extension_Pack-${REQ_VR}.vbox-extpack"

VBMGR="$(which VBoxManage)" || true
if [ "$VBMGR" ] ; then
	CURRENT_VER="$(VBoxManage list extpacks |sed -ne "/^Version:/{s%^.*[[:blank:]]%%;p}")"
	CURRENT_REV="$(VBoxManage list extpacks |sed -ne "/^Revision:/{s%^.*[[:blank:]]%%;p}")"
fi

if [ "$CURRENT_VER" ] && [ "$CURRENT_REV" ] && [ "$CURRENT_VER" = "$REQ_VER" ] && [ "$CURRENT_REV" = "$REQ_REV" ] ; then
	# not download nor install required
	echo "Extension pack updated. Exiting"
	exit 0
fi

REQ_URL="http://download.virtualbox.org/virtualbox/$REQ_VER/$REQ_NAME"
rc=0
if aurex-cache get "$REQ_URL" ; then
	if [ "$VBMGR" ] ; then
		REQ_FILE="$(aurex-cache file "$REQ_URL")"
		VBoxManage extpack install --replace "$REQ_FILE" || rc=$?
	fi
fi
if [ $rc -ne 0 ] ; then
	echo "Error installing $REQ_FILE. Exiting"
	exit 1
fi

exit 0

